server {
	resolver 10.1.2.252;              #本地DNS,nslockup
	resolver_timeout 5s;
	listen       10000;
		
	location / {
		root html;
		index index.html index.htm;
		proxy_pass $scheme://$host$request_uri;
		proxy_set_header HOST $http_host;
		proxy_buffers 256 4k;
		proxy_max_temp_file_size 0k; 
		proxy_connect_timeout 30;
		proxy_send_timeout 60;
		proxy_read_timeout 60;
		proxy_next_upstream error timeout invalid_header http_502;
	}
	
}



server{
	resolver 10.1.2.252;              #本地DNS,nslockup
	resolver_timeout 5s;
	listen 10443;
	location / {
	root html;
	index index.html index.htm;
		proxy_pass https://$host$request_uri;
		proxy_buffers 256 4k;
		proxy_max_temp_file_size 0k; 
		proxy_connect_timeout 30;
		proxy_send_timeout 60;
		proxy_read_timeout 60;
		proxy_next_upstream error timeout invalid_header http_502;
	}
}



#proxy_set_header X-Real-IP $remote_addr;
#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
/*public static String getRemoteIp(HttpServletRequest request){
		String ip = null;
    	String str = request.getHeader("X-Forwarded-For");
    	String str2 = request.getHeader("X-Real-IP");
    	if(str != null && !str.isEmpty()){
    		ip = str.split(",")[0];
    	}
    	else if(str2 != null && !str2.isEmpty()){
    		ip = str2;
    	}
    	else {
    		ip = request.getRemoteAddr();
    	}
		return ip;
	}*/